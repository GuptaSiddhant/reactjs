{"version":3,"sources":["app/theme.js","state.js","firebase.js","components/molecules/card.js","pages/homepage.js","components/atoms/button.js","app/App.js","serviceWorker.js","index.js"],"names":["themes","light","textPrimary","textSecondary","textDisabled","bgBase","bgElevated","separator","red","orange","yellow","green","blue","purple","dark","setRootCSS","theme","newTheme","item","document","documentElement","style","setProperty","initState","info","projects","reducer","state","action","type","payload","localState","JSON","parse","localStorage","getItem","StateContext","createContext","useStateRef","useContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CardDiv","styled","div","CardIcon","props","color","CardSubTitle","h4","CardTagline","Card","project","id","title","subtitle","date","tags","icon","allTags","findInfoOBJ","key","val","find","obj","forEach","tag","name","push","accentColor","i","length","toLowerCase","matches","filter","x","includes","matchColor","className","matchIcon","map","index","toString","HomePage","children","dispatch","useEffect","unsuscribe","firestore","collection","orderBy","onSnapshot","snapshot","newProject","docs","doc","data","Button","onClick","App","newInfo","setItem","stringify","Boolean","window","location","hostname","match","ReactDOM","render","Provider","value","useReducer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44964dc1.chunk.js","sourcesContent":["export const themes = {\n  light: {\n    textPrimary: \"#000000\",\n    textSecondary: \"#4D4D4D\",\n    textDisabled: \"#8E8E93\",\n    bgBase: \"#F2F2F7\",\n    bgElevated: \"#FFFFFF\",\n    separator: \"#CECED9\",\n    red: \"#FF3B30\",\n    orange: \"#FF9500\",\n    yellow: \"#FFCC00\",\n    green: \"#34C759\",\n    blue: \"#007AFF\",\n    purple: \"#AF52DE\"\n  },\n  dark: {\n    textPrimary: \"#FFFFFF\",\n    textSecondary: \"#C6C6C8\",\n    textDisabled: \"#8E8E93\",\n    bgBase: \"#000000\",\n    bgElevated: \"#1C1C1E\",\n    separator: \"#4D4D4D\",\n    red: \"#FF453A\",\n    orange: \"#FF9F0A\",\n    yellow: \"#FFD60A\",\n    green: \"#32D74B\",\n    blue: \"#0A84FF\",\n    purple: \"#BF5AF2\"\n  }\n};\n\nexport function setRootCSS(theme) {\n  const newTheme = themes[theme];\n  for (let item in newTheme) {\n    document.documentElement.style.setProperty(`--${item}`, newTheme[item]);\n  }\n}\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { setRootCSS } from \"./app/theme\";\n\nconst initState = {\n  theme: \"light\",\n  info: {},\n  projects: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"themeSwitch\":\n      setRootCSS(action.payload);\n      return { ...state, theme: action.payload };\n    case \"fetchNewProject\":\n      return { ...state, projects: action.payload };\n    case \"updateInfo\":\n      return { ...state, info: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst localState = JSON.parse(localStorage.getItem(\"state\"));\n\nexport const StateContext = createContext();\nexport const useStateRef = () => useContext(StateContext);\nexport const StateProvider = ({ children }) => (\n  <StateContext.Provider value={useReducer(reducer, localState || initState)}>\n    {children}\n  </StateContext.Provider>\n);\n","import firebase from \"firebase/app\";\nimport \"firebase/firebase-firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDtuA2g8c2Wy3HW-XxSjeMtaeV4EfmpNUk\",\n  authDomain: \"guptasiddhant-com.firebaseapp.com\",\n  databaseURL: \"https://guptasiddhant-com.firebaseio.com\",\n  projectId: \"guptasiddhant-com\",\n  storageBucket: \"guptasiddhant-com.appspot.com\",\n  messagingSenderId: \"693972243954\",\n  appId: \"1:693972243954:web:9cabb4774c7f9e6196876b\",\n  measurementId: \"G-SVFRY7WXKB\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport { useStateRef } from \"../../state\";\nimport styled from \"styled-components\";\n\nconst CardDiv = styled.div`\n  font-size: 1rem;\n  background: var(--bgElevated);\n  margin: 40px;\n  border-radius: 16px;\n  padding: 40px;\n  box-shadow: 0 0 40px 0 rgba(0, 0, 0, 0.1);\n  width: 520px;\n  height: auto;\n  position: relative;\n  zindex: 2;\n`;\n\nconst CardIcon = styled.div`\n  position: absolute;\n  left: -20px;\n  top: 34px;\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2);\n  color: #ffffff;\n  text-align: center;\n  line-height: 40px;\n  font-size: 20px;\n  z-index: 10;\n  background-color: ${props => \"var(--\" + props.color + \")\"};\n`;\n\nconst CardSubTitle = styled.h4`\n  color: ${props => \"var(--\" + props.color + \")\"};\n  text-transform: uppercase;\n`;\n\nconst CardTagline = styled.h4`\n  color: var(--textSecondary);\n`;\n\nconst Card = ({ project }) => {\n  const [state, dispatch] = useStateRef();\n\n  const { id, title, subtitle, date, tags, icon } = project;\n\n  let allTags = [];\n  state.info[0].tags.forEach(tag =>\n    tag.name !== \"other\" ? allTags.push(tag.name) : null\n  );\n\n  function matchColor(tags) {\n    for (var i = 0; i < tags.length; i++) {\n      tags[i] = tags[i].toLowerCase();\n    }\n    let matches = allTags.filter(x => tags.includes(x));\n    if (matches[0] && matches[0] !== \"\") {\n      return findInfoOBJ(\"name\", matches[0]).color;\n    } else {\n      return findInfoOBJ(\"name\", \"other\").color;\n    }\n  }\n\n  function matchIcon(tags) {\n    for (var i = 0; i < tags.length; i++) {\n      tags[i] = tags[i].toLowerCase();\n    }\n    let matches = allTags.filter(x => tags.includes(x));\n    if (matches[0] && matches[0] !== \"\") {\n      return findInfoOBJ(\"name\", matches[0]).icon;\n    } else {\n      return findInfoOBJ(\"name\", \"other\").icon;\n    }\n  }\n\n  function findInfoOBJ(key, val) {\n    return state.info[0].tags.find(obj => obj[key] === val);\n  }\n\n  const accentColor = matchColor(tags);\n\n  return (\n    <CardDiv id={id} className=\"card\">\n      <CardIcon color={accentColor}>\n        <i className={icon || matchIcon(tags)} />\n      </CardIcon>\n      <div className=\"heading\">\n        <h1>{title}</h1>\n        <CardSubTitle color={accentColor}>{subtitle}</CardSubTitle>\n        <CardTagline>\n          {date ? `${date} •` : \"\"}{\" \"}\n          {tags.map((tag, index) => (\n            <span key={tag}>\n              {tag.toString() + `${index < tags.length - 1 ? \", \" : \" \"}`}\n            </span>\n          ))}\n        </CardTagline>\n      </div>\n    </CardDiv>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState } from \"react\";\nimport { useStateRef } from \"../state\";\nimport Card from \"../components/molecules/card\";\nimport firebase from \"../firebase\";\n\nconst HomePage = ({ children }) => {\n  const [state, dispatch] = useStateRef();\n\n  useEffect(() => {\n    const unsuscribe = firebase\n      .firestore()\n      .collection(\"projects\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot(snapshot => {\n        const newProject = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        dispatch({ type: \"fetchNewProject\", payload: newProject });\n      });\n    return () => unsuscribe();\n  }, []);\n\n  return (\n    <div id=\"projectList\">\n      {state.projects.map(project => (\n        <Card key={project.id} project={project} />\n      ))}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { useStateRef } from \"../../state\";\n\nconst Button = ({ children }) => {\n  const [state, dispatch] = useStateRef();\n\n  return (\n    <button\n      onClick={() =>\n        dispatch({\n          type: \"themeSwitch\",\n          payload: state.theme === \"dark\" ? \"light\" : \"dark\"\n        })\n      }\n    >\n      {state.theme}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect } from \"react\";\nimport { useStateRef } from \"../state\";\nimport \"./App.css\";\nimport firebase from \"../firebase\";\n\nimport { setRootCSS } from \"./theme\";\nimport HomePage from \"../pages/homepage\";\nimport Button from \"../components/atoms/button\";\n// import Add from \"../components/atoms/add\";\n\nfunction App() {\n  const [state, dispatch] = useStateRef();\n  setRootCSS(state.theme);\n\n  useEffect(() => {\n    const unsuscribe = firebase\n      .firestore()\n      .collection(\"info\")\n      .onSnapshot(snapshot => {\n        const newInfo = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        dispatch({ type: \"updateInfo\", payload: newInfo });\n      });\n    return () => unsuscribe();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <div id=\"App\">\n      <Button />\n      {/* <Add /> */}\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { StateProvider } from \"./state\";\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}